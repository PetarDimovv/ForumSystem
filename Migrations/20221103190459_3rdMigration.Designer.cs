// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StackOverflow.Data;

namespace StackOverflow.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221103190459_3rdMigration")]
    partial class _3rdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StackOverflow.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "I Don't see this link. Can you send me here.",
                            Likes = 0,
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "I don't See this link. Can you send me here.",
                            Likes = 0,
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "I don'T see this link. Can you send me here.",
                            Likes = 0,
                            PostId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("StackOverflow.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentCount = 0,
                            Content = "Try to follow this guide *Link* ",
                            Likes = 0,
                            Title = "How to create a SQL server",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentCount = 0,
                            Content = "Try to follow this guide *link* ",
                            Likes = 0,
                            Title = "How to delete a SQL Server",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CommentCount = 0,
                            Content = "Try to follow this guide *LInk* ",
                            Likes = 0,
                            Title = "How to update a SQL SErver",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("StackOverflow.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = false,
                            IsBlocked = false,
                            IsLoggedIn = false,
                            Role = 0,
                            Username = "Aleks77"
                        },
                        new
                        {
                            Id = 2,
                            IsAdmin = false,
                            IsBlocked = false,
                            IsLoggedIn = false,
                            Role = 0,
                            Username = "PeshoEQk"
                        },
                        new
                        {
                            Id = 3,
                            IsAdmin = true,
                            IsBlocked = false,
                            IsLoggedIn = false,
                            Role = 0,
                            Username = "Piotri"
                        });
                });

            modelBuilder.Entity("StackOverflow.Models.Comment", b =>
                {
                    b.HasOne("StackOverflow.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StackOverflow.Models.User", "CreatedBy")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("StackOverflow.Models.Post", b =>
                {
                    b.HasOne("StackOverflow.Models.User", "CreatedBy")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("StackOverflow.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("StackOverflow.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
